# .env.example
# This is an example environment file for the Tailscale Forwarder Docker Compose setup.
# Copy this file to .env and fill in your actual values.
# DO NOT commit your actual .env file if it contains sensitive information like TS_AUTHKEY.

# --- Required Tailscale Authentication ---
# TS_AUTHKEY: Your Tailscale authentication key.
# Obtain from Tailscale Admin Console -> Settings -> Keys -> Auth keys -> Generate auth key...
# Choose if it's reusable, ephemeral, pre-authorized, and any tags.
TS_AUTHKEY=tskey-auth-YOUR_AUTH_KEY_HERE_REPLACE_ME

# --- Basic Tailscale Node Configuration (Optional - defaults will be used if not set) ---
# TS_HOSTNAME: Desired hostname for this node in your Tailscale network.
# If not set, the entrypoint.sh script or Tailscale itself might assign a default.
TS_HOSTNAME=tailforwarder

# TS_TAGS_ADVERTISE: Comma-separated or space-separated list of tags to apply to this node.
# Example: "tag:gateway, tag:docker-host" or "tag:server tag:production"
# These tags can be used in Tailscale ACLs.
TS_TAGS_ADVERTISE=tag:forwarder

# --- Tailscale Routing Features (Optional) ---
# TS_ROUTES_ADVERTISE: Comma-separated list of subnets this node should advertise to your Tailscale network.
# Example: "192.168.1.0/24,10.0.50.0/24"
# This is used if you want this container to act as a subnet router FOR the Tailscale network
# (i.e., other Tailscale nodes can reach these LAN subnets via this container).
# Requires enabling routes in Tailscale Admin console.
# For simple forwarding TO a Tailscale IP or TO a LAN IP, this is often NOT needed.
# TS_ROUTES_ADVERTISE=

# TS_ACCEPT_ROUTES: Set to "true" if this node should accept routes advertised by other Tailscale nodes.
# This is necessary if you want to use SCENARIO 3 (Local LAN to an IP within an Advertised Route).
# Default behavior of 'tailscale up' might be to not accept routes unless explicitly told.
# Check Tailscale documentation for current defaults if unsure.
TS_ACCEPT_ROUTES=false # Set to "true" if needed for accessing advertised subnets

# --- Advanced Tailscale Settings (Optional) ---
# TS_EXTRA_ARGS: Any additional command-line arguments for the 'tailscale up' command.
# Arguments should be space-separated.
# Example: "--shields-up" or "--snat-subnet-routes=false --netfilter-mode=off"
# Consult Tailscale documentation for available options.
# TS_EXTRA_ARGS=--shields-up

# TS_PEER_UDP_PORT: Specifies the UDP port number for Tailscale's peer-to-peer traffic.
# Corresponds to the 'tailscale up --port=N' flag.
# If not set, Tailscale will auto-select a port (usually 41641 if available, or 0 for auto-select).
# Example: TS_PEER_UDP_PORT=41641
TS_PEER_UDP_PORT=41641

# --- Variables for iptables-config.sh (These are also set in docker-compose.yml) ---
# These are listed here for completeness as they control the forwarding behavior,
# but they are typically defined directly in the docker-compose.yml 'environment' section
# for clarity, as they are less "secret" and more about the service's function.
#
# How to use these _ENV variables:
# 1. Copy this file to .env.
# 2. In your .env file, set the desired values for these variables (e.g., DESTINATION_IP_FROM_TS_ENV=192.168.1.100).
# 3. The docker-compose.yml file is expected to reference these _ENV variables from your .env file
#    to set the actual environment variables for the container (e.g., DESTINATION_IP_FROM_TS=${DESTINATION_IP_FROM_TS_ENV}).
#    This allows you to keep your specific configuration in the .env file, separate from the main docker-compose.yml.
#
# You could define them here and reference them in docker-compose.yml if preferred.
# Example:
# MACVLAN_IFACE_ENV=eth0
# ENABLE_TS_TO_LOCAL_ENV=false
# DESTINATION_IP_FROM_TS_ENV=10.10.10.50
# ENABLE_LOCAL_TO_TS_ENV=true
# LISTEN_IP_ON_MACVLAN_ENV=10.10.10.200
# TARGET_TS_IP_FROM_LOCAL_ENV=100.x.y.z
# EXCLUDE_PORTS_TCP_ENV=
# EXCLUDE_PORTS_UDP_ENV=